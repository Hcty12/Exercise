#include <iostream>

// ساختار غذا
struct Food {
    int code;
    std::string name;
    double price;
};

// ساختار نوشیدنی
struct Drink {
    int code;
    std::string name;
    double price;
};

// ساختار پیش غذا
struct Appetizer {
    int code;
    std::string name;
    double price;
};

// تعریف آرایه‌های از ساختارهای مختلف
Food foods[] = {
    {1, "Pizza", 10.99},
    {2, "Burger", 8.50},
    {3, "Pasta", 7.25}
};

Drink drinks[] = {
    {1, "Cola", 2.50},
    {2, "Orange Juice", 3.00},
    {3, "Water", 1.00}
};

Appetizer appetizers[] = {
    {1, "Caesar Salad", 4.99},
    {2, "Garlic Bread", 3.25},
    {3, "Soup", 2.99}
};

// تابع محاسبه ارزش افزوده
double calculateVAT(double price) {
    const double VAT_RATE = 0.09;
    return price * VAT_RATE;
}

int main() {
    int foodCode, drinkCode, appetizerCode;

    std::cout << "Enter the food code: ";
    std::cin >> foodCode;

    std::cout << "Enter the drink code: ";
    std::cin >> drinkCode;

    std::cout << "Enter the appetizer code: ";
    std::cin >> appetizerCode;

    // جستجو در آرایه‌ها بر اساس کدهای وارد شده توسط کاربر
    double foodPrice, drinkPrice, appetizerPrice;

    for (Food food : foods) {
        if (food.code == foodCode) {
            foodPrice = food.price;
            break;
        }
    }

    for (Drink drink : drinks) {
        if (drink.code == drinkCode) {
            drinkPrice = drink.price;
            break;
        }
    }

    for (Appetizer appetizer : appetizers) {
        if (appetizer.code == appetizerCode) {
            appetizerPrice = appetizer.price;
            break;
        }
    }

    // محاسبه قیمت نهایی و چاپ فاکتور
    double total = foodPrice + drinkPrice + appetizerPrice;
    double vat = calculateVAT(total);
    double finalTotal = total + vat;

    std::cout << "Food Price: $" << foodPrice << std::endl;
    std::cout << "Drink Price: $" << drinkPrice << std::endl;
    std::cout << "Appetizer Price: $" << appetizerPrice << std::endl;
    std::cout << "Total Price: $" << total << std::endl;
    std::cout << "VAT: $" << vat << std::endl;
    std::cout << "Final Total: $" << finalTotal << std::endl;

    return 0;
}